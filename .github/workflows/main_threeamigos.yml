name: Build, Test, and Deploy .NET Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: threeamigos
  AZURE_WEBAPP_PACKAGE_PATH: ./ProductApi/published_app
  DOTNET_VERSION: '9.0.x'

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Clean build artifacts
        run: |
          find . -type d \( -name "bin" -o -name "obj" \) -exec rm -rf {} +

      - name: Restore dependencies
        run: dotnet restore ThreeAmigos-Customer-WebApp.sln

      - name: Build application
        run: dotnet build ThreeAmigos-Customer-WebApp.sln --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test ProductApi/UnitTests/Test.csproj --configuration Release --verbosity normal

      - name: Publish application
        run: dotnet publish ProductApi/ThreeAmigos.csproj -c Release -o ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: List published app files
        run: ls -la ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: published_app
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    environment:
      name: production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: published_app

      - name: List downloaded artifact files
        run: ls -la published_app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: published_app
